[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "restock"
version = "1.0.0"
description = "Inventory Forecasting & Simulation Suite"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.9"
dependencies = [
    "pandas>=2.3.1",
    "numpy>=2.0.2",
    "plotly>=6.2.0",
    "prophet>=1.1.7",
    "flask>=3.1.1",
    "scikit-learn>=1.6.1",
    "statsmodels>=0.14.5",
    "matplotlib>=3.9.4",
    "seaborn>=0.13.2",
    "tqdm>=4.67.1",
    "holidays>=0.77",
    "cmdstanpy>=1.2.5",
    "narwhals>=1.48.0",
    "pydantic>=2.0.0",
    "ipykernel>=6.30.0",
    "requests>=2.31.0",
    "pyarrow>=21.0.0",
    "python-dotenv>=1.1.1",
    "cryptography>=46.0.2",
    "snowflake-connector-python>=2.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.scripts]
run-backtest = "run_unified_backtest:main"
run-safety-stocks = "run_safety_stock_calculation:main"
run-simulation = "run_simulation:main"

[project.urls]
Homepage = "https://github.com/yourusername/restock"
Repository = "https://github.com/yourusername/restock"
Documentation = "https://restock.readthedocs.io"
Issues = "https://github.com/yourusername/restock/issues"

[tool.hatch.build.targets.wheel]
packages = ["forecaster"]

[tool.hatch.build.targets.wheel.sources]
"forecaster" = "forecaster"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["forecaster"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests", "forecaster/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=forecaster",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["forecaster"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
